

package Formularios;

import com.mysql.jdbc.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Michael
 */
public class Asientos extends javax.swing.JFrame {
    
    public String validador;
    
            public static int cantidad;
            public static int EA1,EA2,EA3,EA4,EA5,EA6;
            public static int EB1,EB2,EB3,EB4,EB5,EB6;
            public static int EC1,EC2,EC3,EC4,EC5,EC6;
            public static int ED1,ED2,ED3,ED4,ED5,ED6;
            public static int EE1,EE2,EE3,EE4,EE5,EE6;    
      private static Connection con;
    // Declaramos los datos de conexion a la bd
    private static final String driver="com.mysql.jdbc.Driver";
    private static final String user="root";
    private static final String pass="12345";
    private static final String url="jdbc:mysql://localhost:3306/mydb";
    // Funcion que va conectarse a mi bd de mysql
    public void conector() {
        // Reseteamos a null la conexion a la bd
        con=null;
        try{
            Class.forName(driver);
            // Nos conectamos a la bd
            con= (Connection) DriverManager.getConnection(url, user, pass);
            // Si la conexion fue exitosa mostramos un mensaje de conexion exitosa
            if (con!=null){
              //  JOptionPane.showMessageDialog(null,"Conexion establecida");
            }
        }
        // Si la conexion NO fue exitosa mostramos un mensaje de error
        catch (ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog(null,"Error de conexion" + e);
        }
    
    
    }
    
    
    /**
     * Creates new form Asientos
     */
    public Asientos() {
        initComponents();
        conector();
        asientosdisp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCancelar = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        A1 = new javax.swing.JCheckBox();
        A2 = new javax.swing.JCheckBox();
        A3 = new javax.swing.JCheckBox();
        A4 = new javax.swing.JCheckBox();
        A5 = new javax.swing.JCheckBox();
        A6 = new javax.swing.JCheckBox();
        B3 = new javax.swing.JCheckBox();
        B4 = new javax.swing.JCheckBox();
        B5 = new javax.swing.JCheckBox();
        B6 = new javax.swing.JCheckBox();
        B1 = new javax.swing.JCheckBox();
        B2 = new javax.swing.JCheckBox();
        C1 = new javax.swing.JCheckBox();
        D1 = new javax.swing.JCheckBox();
        E1 = new javax.swing.JCheckBox();
        C2 = new javax.swing.JCheckBox();
        D2 = new javax.swing.JCheckBox();
        E2 = new javax.swing.JCheckBox();
        E3 = new javax.swing.JCheckBox();
        D3 = new javax.swing.JCheckBox();
        C3 = new javax.swing.JCheckBox();
        D4 = new javax.swing.JCheckBox();
        E4 = new javax.swing.JCheckBox();
        C4 = new javax.swing.JCheckBox();
        D5 = new javax.swing.JCheckBox();
        E5 = new javax.swing.JCheckBox();
        C5 = new javax.swing.JCheckBox();
        D6 = new javax.swing.JCheckBox();
        E6 = new javax.swing.JCheckBox();
        C6 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSiguiente.setText("Siguiente");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        A1.setText("A1");

        A2.setText("A2");

        A3.setText("A3");
        A3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A3ActionPerformed(evt);
            }
        });

        A4.setText("A4");
        A4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A4ActionPerformed(evt);
            }
        });

        A5.setText("A5");
        A5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A5ActionPerformed(evt);
            }
        });

        A6.setText("A6");
        A6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A6ActionPerformed(evt);
            }
        });

        B3.setText("B3");
        B3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B3ActionPerformed(evt);
            }
        });

        B4.setText("B4");
        B4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B4ActionPerformed(evt);
            }
        });

        B5.setText("B5");
        B5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B5ActionPerformed(evt);
            }
        });

        B6.setText("B6");
        B6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B6ActionPerformed(evt);
            }
        });

        B1.setText("B1");

        B2.setText("B2");
        B2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B2ActionPerformed(evt);
            }
        });

        C1.setText("C1");

        D1.setText("D1");

        E1.setText("E1");

        C2.setText("C2");

        D2.setText("D2");
        D2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D2ActionPerformed(evt);
            }
        });

        E2.setText("E2");

        E3.setText("E3");

        D3.setText("D3");

        C3.setText("C3");

        D4.setText("D4");

        E4.setText("E4");
        E4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E4ActionPerformed(evt);
            }
        });

        C4.setText("C4");

        D5.setText("D5");

        E5.setText("E5");

        C5.setText("C5");

        D6.setText("D6");

        E6.setText("E6");

        C6.setText("C6");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Asiento.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(94, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(623, 623, 623))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(btnSiguiente)
                        .addGap(253, 253, 253)
                        .addComponent(btnCancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(A1)
                                                    .addGap(18, 18, 18))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel2)
                                                    .addGap(25, 25, 25)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(25, 25, 25)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(A2)
                                                    .addComponent(jLabel7))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(A3)
                                                    .addComponent(jLabel8))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(A4)
                                                    .addComponent(jLabel9))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(A5)
                                                    .addComponent(jLabel10))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel11)
                                                    .addComponent(A6)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(B1)
                                        .addGap(18, 18, 18)
                                        .addComponent(B2)
                                        .addGap(24, 24, 24)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(B3)
                                            .addComponent(jLabel13))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(B4)
                                            .addComponent(jLabel14))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel15)
                                            .addComponent(B5))
                                        .addGap(24, 24, 24)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(B6))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(C1)
                                            .addGap(18, 18, 18))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addGap(25, 25, 25)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(C2)
                                        .addComponent(jLabel17))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(C3)
                                        .addComponent(jLabel18))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(C4)
                                        .addComponent(jLabel19))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(C5)
                                        .addComponent(jLabel20))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel21)
                                        .addComponent(C6))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(D1)
                                            .addComponent(jLabel5))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(D2)
                                            .addComponent(jLabel22))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(D3)
                                            .addComponent(jLabel23))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(D4)
                                            .addComponent(jLabel24))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(D5)
                                            .addComponent(jLabel25)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(E1)
                                            .addComponent(jLabel6))
                                        .addGap(20, 20, 20)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(E2)
                                            .addComponent(jLabel27))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(23, 23, 23)
                                                .addComponent(jLabel28))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(E3)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(E4)
                                                .addGap(18, 18, 18)
                                                .addComponent(E5))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(23, 23, 23)
                                                .addComponent(jLabel29)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel30)))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(E6)
                                    .addComponent(jLabel26)
                                    .addComponent(D6)
                                    .addComponent(jLabel31))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(A1)
                            .addComponent(A2)
                            .addComponent(A3)
                            .addComponent(A4)
                            .addComponent(A5)
                            .addComponent(A6)))
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B1)
                    .addComponent(B2)
                    .addComponent(B3)
                    .addComponent(B4)
                    .addComponent(B5)
                    .addComponent(B6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(C1)
                    .addComponent(C3)
                    .addComponent(C4)
                    .addComponent(C5)
                    .addComponent(C6)
                    .addComponent(C2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25)
                            .addComponent(jLabel26))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(D3)
                            .addComponent(D4)
                            .addComponent(D5)
                            .addComponent(D6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(D2)
                                .addComponent(D1))))
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29)
                            .addComponent(jLabel30)
                            .addComponent(jLabel31))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(E1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(E5)
                                .addComponent(E6)
                                .addComponent(E3)
                                .addComponent(E2)
                                .addComponent(E4)))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSiguiente)
                            .addComponent(btnCancelar)))
                    .addComponent(jLabel27))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
                    
        
            if(A1.isSelected()){
                EA1=1;
                cantidad = cantidad+1;
            }
            else{
                EA1=0;
            }
            if(A2.isSelected()){
                EA2=1;
                cantidad = cantidad+1;
            }
            else{
                EA2=0;
            }
            if(A3.isSelected()){
                EA3=1;
                cantidad = cantidad+1;
            }
            else{
                EA3=0;
            }
            if(A4.isSelected()){
                EA4=1;
                cantidad = cantidad+1;
            }
            else{
                EA4=0;
            }
            if(A5.isSelected()){
                EA5=1;
                cantidad = cantidad+1;
            }
            else{
                EA5=0;
            }
            if(A6.isSelected()){
                EA6=1;
                cantidad = cantidad+1;
            }
            else{
                EA6=0;
            }  
            if(B1.isSelected()){
                EB1=1;
                cantidad = cantidad+1;
            }
            else{
                EB1=0;
            }
            if(B2.isSelected()){
                EB2=1;
                cantidad = cantidad+1;
            }
            else{
                EB2=0;
            }
            if(B3.isSelected()){
                EB3=1;
                cantidad = cantidad+1;
            }
            else{
                EB3=0;
            }
            if(B4.isSelected()){
                EB4=1;
                cantidad = cantidad+1;
            }
            else{
                EB4=0;
            }
            if(B5.isSelected()){
                EB5=1;
                cantidad = cantidad+1;
            }
            else{
                EB5=0;
            }
            if(B6.isSelected()){
                EB6=1;
                cantidad = cantidad+1;
            }
            else{
                EB6=0;
            }
            if(C1.isSelected()){
                EC1=1;
                cantidad = cantidad+1;
            }
            else{
                EC1=0;
            }
            if(C2.isSelected()){
                EC2=1;
                cantidad = cantidad+1;
            }
            else{
                EC2=0;
            }
            if(C3.isSelected()){
                EC3=1;
                cantidad = cantidad+1;
            }
            else{
                EC3=0;
            }
            if(C4.isSelected()){
                EC4=1;
                cantidad = cantidad+1;
            }
            else{
                EC4=0;
            }
            if(C5.isSelected()){
                EC5=1;
                cantidad = cantidad+1;
            }
            else{
                EC5=0;
            }
            if(C6.isSelected()){
                EC6=1;
                cantidad = cantidad+1;
            }
            else{
                EC6=0;
            }
            if(D1.isSelected()){
                ED1=1;
                cantidad = cantidad+1;
            }
            else{
                ED1=0;
            }
            if(D2.isSelected()){
                ED2=1;
                cantidad = cantidad+1;
            }
            else{
                ED2=0;
            }
            if(D3.isSelected()){
                ED3=1;
                cantidad = cantidad+1;
            }
            else{
                ED3=0;
            }
            if(D4.isSelected()){
                ED4=1;
                cantidad = cantidad+1;
            }
            else{
                ED4=0;
            }        
            if(D5.isSelected()){
                ED5=1;
                cantidad = cantidad+1;
            }
            else{
                ED5=0;
            }
            if(D6.isSelected()){
                ED6=1;
                cantidad = cantidad+1;
            }
            else{
                ED6=0;
            }
            
            if(E1.isSelected()){
                EE1=1;
                cantidad = cantidad+1;
            }
            else{
                EE1=0;
            }
            if(E2.isSelected()){
                EE2=1;
                cantidad = cantidad+1;
            }
            else{
                EE2=0;
            }
            if(D3.isSelected()){
                EE3=1;
                cantidad = cantidad+1;
            }
            else{
                EE3=0;
            }
            if(E4.isSelected()){
                EE4=1;
                cantidad = cantidad+1;
            }
            else{
                EE4=0;
            }        
            if(E5.isSelected()){
                EE5=1;
                cantidad = cantidad+1;
            }
            else{
                EE5=0;
            }
            if(E6.isSelected()){
                EE6=1;
                cantidad = cantidad+1;
            }
            else{
                EE6=0;
            }
            
            
            
            
            

        
               Entradas e = new Entradas();
               e.setVisible(true);
               this.setVisible(false);
               
               
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
                Menu m = new Menu();
                m.setVisible(true);
                this.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
        
    }//GEN-LAST:event_formWindowActivated

    private void A3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_A3ActionPerformed

    private void A4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_A4ActionPerformed

    private void A5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_A5ActionPerformed

    private void A6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_A6ActionPerformed

    private void B3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B3ActionPerformed

    private void B4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B4ActionPerformed

    private void B5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B5ActionPerformed

    private void B6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B6ActionPerformed

    private void B2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B2ActionPerformed

    private void D2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_D2ActionPerformed

    private void E4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_E4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Asientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Asientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Asientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Asientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Asientos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox A1;
    private javax.swing.JCheckBox A2;
    private javax.swing.JCheckBox A3;
    private javax.swing.JCheckBox A4;
    private javax.swing.JCheckBox A5;
    private javax.swing.JCheckBox A6;
    private javax.swing.JCheckBox B1;
    private javax.swing.JCheckBox B2;
    private javax.swing.JCheckBox B3;
    private javax.swing.JCheckBox B4;
    private javax.swing.JCheckBox B5;
    private javax.swing.JCheckBox B6;
    private javax.swing.JCheckBox C1;
    private javax.swing.JCheckBox C2;
    private javax.swing.JCheckBox C3;
    private javax.swing.JCheckBox C4;
    private javax.swing.JCheckBox C5;
    private javax.swing.JCheckBox C6;
    private javax.swing.JCheckBox D1;
    private javax.swing.JCheckBox D2;
    private javax.swing.JCheckBox D3;
    private javax.swing.JCheckBox D4;
    private javax.swing.JCheckBox D5;
    private javax.swing.JCheckBox D6;
    private javax.swing.JCheckBox E1;
    private javax.swing.JCheckBox E2;
    private javax.swing.JCheckBox E3;
    private javax.swing.JCheckBox E4;
    private javax.swing.JCheckBox E5;
    private javax.swing.JCheckBox E6;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables

    private void asientosdisp() {
        
        int estado=2;
                
            //Checkbox A1
            try {
                validador = "select estado from Asientos where Asiento ='a1'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        A1.setEnabled(false);
                    break;
                    case 0:
                        A1.setEnabled(true);
                    break;                    
                }    
            //Checkbox A2
            try {
                validador = "select estado from Asientos where Asiento ='a2'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        A2.setEnabled(false);
                    break;
                    case 0:
                        A2.setEnabled(true);
                    break;                    
                }                  
                              
            //Checkbox A3
            try {
                validador = "select estado from Asientos where Asiento ='a3'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        A3.setEnabled(false);
                    break;
                    case 0:
                        A3.setEnabled(true);
                    break;                    
                }    
            //Checkbox A4
            try {
                validador = "select estado from Asientos where Asiento ='a4'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        A4.setEnabled(false);
                    break;
                    case 0:
                        A4.setEnabled(true);
                    break;                    
                }
            //Checkbox A5
            try {
                validador = "select estado from Asientos where Asiento ='a5'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        A5.setEnabled(false);
                    break;
                    case 0:
                        A5.setEnabled(true);
                    break;                    
                }    
            //Checkbox A6
            try {
                validador = "select estado from Asientos where Asiento ='a6'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        A6.setEnabled(false);
                    break;
                    case 0:
                        A6.setEnabled(true);
                    break;                    
                } 
              
           
            //Checkbox B1
            try {
                validador = "select estado from Asientos where Asiento ='b1'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        B1.setEnabled(false);
                    break;
                    case 0:
                        B1.setEnabled(true);
                    break;                    
                }    
            //Checkbox B2
            try {
                validador = "select estado from Asientos where Asiento ='b2'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        B2.setEnabled(false);
                    break;
                    case 0:
                        B2.setEnabled(true);
                    break;                    
                }                  
                              
            //Checkbox B3
            try {
                validador = "select estado from Asientos where Asiento ='b3'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        B3.setEnabled(false);
                    break;
                    case 0:
                        B3.setEnabled(true);
                    break;                    
                }    
            //Checkbox A4
            try {
                validador = "select estado from Asientos where Asiento ='b4'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        B4.setEnabled(false);
                    break;
                    case 0:
                        B4.setEnabled(true);
                    break;                    
                }
            //Checkbox b5
            try {
                validador = "select estado from Asientos where Asiento ='b5'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        B5.setEnabled(false);
                    break;
                    case 0:
                        B5.setEnabled(true);
                    break;                    
                }    
            //Checkbox b6
            try {
                validador = "select estado from Asientos where Asiento ='b6'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        B6.setEnabled(false);
                    break;
                    case 0:
                        B6.setEnabled(true);
                    break;                    
                } 
              
           
            //Checkbox C1
            try {
                validador = "select estado from Asientos where Asiento ='c1'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        C1.setEnabled(false);
                    break;
                    case 0:
                        C1.setEnabled(true);
                    break;                    
                }    
            //Checkbox C2
            try {
                validador = "select estado from Asientos where Asiento ='c2'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        C2.setEnabled(false);
                    break;
                    case 0:
                        C2.setEnabled(true);
                    break;                    
                }                  
                              
            //Checkbox C3
            try {
                validador = "select estado from Asientos where Asiento ='c3'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        C3.setEnabled(false);
                    break;
                    case 0:
                        C3.setEnabled(true);
                    break;                    
                }    
            //Checkbox C4
            try {
                validador = "select estado from Asientos where Asiento ='c4'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        C4.setEnabled(false);
                    break;
                    case 0:
                        C4.setEnabled(true);
                    break;                    
                }
            //Checkbox C5
            try {
                validador = "select estado from Asientos where Asiento ='c5'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        C5.setEnabled(false);
                    break;
                    case 0:
                        C5.setEnabled(true);
                    break;                    
                }    
            //Checkbox C6
            try {
                validador = "select estado from Asientos where Asiento ='c6'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        C6.setEnabled(false);
                    break;
                    case 0:
                        C6.setEnabled(true);
                    break;                    
                }              
              
            //Checkbox D1
            try {
                validador = "select estado from Asientos where Asiento ='d1'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        D1.setEnabled(false);
                    break;
                    case 0:
                        D1.setEnabled(true);
                    break;                    
                }    
            //Checkbox D2
            try {
                validador = "select estado from Asientos where Asiento ='d2'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        D2.setEnabled(false);
                    break;
                    case 0:
                        D2.setEnabled(true);
                    break;                    
                }                  
                              
            //Checkbox D3
            try {
                validador = "select estado from Asientos where Asiento ='d3'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        D3.setEnabled(false);
                    break;
                    case 0:
                        D3.setEnabled(true);
                    break;                    
                }    
            //Checkbox D4
            try {
                validador = "select estado from Asientos where Asiento ='d4'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        D4.setEnabled(false);
                    break;
                    case 0:
                        D4.setEnabled(true);
                    break;                    
                }
            //Checkbox C5
            try {
                validador = "select estado from Asientos where Asiento ='d5'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        D5.setEnabled(false);
                    break;
                    case 0:
                        D5.setEnabled(true);
                    break;                    
                }    
            //Checkbox D6
            try {
                validador = "select estado from Asientos where Asiento ='d6'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        D6.setEnabled(false);
                    break;
                    case 0:
                        D6.setEnabled(true);
                    break;                    
                }                   

            //Checkbox E1
            try {
                validador = "select estado from Asientos where Asiento ='e1'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        E1.setEnabled(false);
                    break;
                    case 0:
                        E1.setEnabled(true);
                    break;                    
                }    
            //Checkbox E2
            try {
                validador = "select estado from Asientos where Asiento ='e2'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        E2.setEnabled(false);
                    break;
                    case 0:
                        E2.setEnabled(true);
                    break;                    
                }                  
                              
            //Checkbox E3
            try {
                validador = "select estado from Asientos where Asiento ='e3'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        E3.setEnabled(false);
                    break;
                    case 0:
                        E3.setEnabled(true);
                    break;                    
                }    
            //Checkbox E4
            try {
                validador = "select estado from Asientos where Asiento ='e4'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        E4.setEnabled(false);
                    break;
                    case 0:
                        E4.setEnabled(true);
                    break;                    
                }
            //Checkbox E5
            try {
                validador = "select estado from Asientos where Asiento ='e5'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        E5.setEnabled(false);
                    break;
                    case 0:
                        E5.setEnabled(true);
                    break;                    
                }    
            //Checkbox E6
            try {
                validador = "select estado from Asientos where Asiento ='e6'";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(validador);
                rs.next();
                estado =Integer.parseInt(rs.getString(1));
            } catch (SQLException ex) {
                Logger.getLogger(Asientos.class.getName()).log(Level.SEVERE, null, ex);
            }
            

              switch(estado){
                    case 1:
                        E6.setEnabled(false);
                    break;
                    case 0:
                        E6.setEnabled(true);
                    break;                    
                }

              
    }


}
